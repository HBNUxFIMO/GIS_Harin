# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SToxsuKb5lzCb9Ac0IZB5D-BijbTn4Yi
"""

from __future__ import print_function

from osgeo import gdal

print("GDAL's version is :" + gdal.__version__)
print(gdal)

dataset = gdal.Open('LC08_L2SP_115035_20240416_20240423_02_T1/LC08_L2SP_115035_20240416_20240423_02_T1_SR_B1.TIF', gdal.GA_ReadOnly)

print(dataset)

num_bands = dataset.RasterCount
print('Number of bands in image: (n)\n'.format(n=num_bands))

rows = dataset.RasterYSize
cols = dataset.RasterXSize
print('Image size is: {r} rows x {c} columns\n'.format(r=rows, c=cols))

desc = dataset.GetDescription()
metadata = dataset.GetMetadata()

print('Raster description: {desc}'.format(desc=desc))
print('Raster metadata:')
print(metadata)
print('\n')

driver = dataset.GetDriver()
print('Raster driver: {d}\n'.format(d=driver.ShortName))

blue = dataset.GetRasterBand(1)

print(blue)

datatype = blue.DataType
print('Band datatype: {dt}'.format(dt=blue.DataType))

datatype_name = gdal.GetDataTypeName(blue.DataType)
print('Band datatype: {dt}'.format(dt = datatype_name))

bytes = gdal.GetDataTypeSize(blue.DataType)
print('Band datatype size: {b} bytes\n'.format(b=bytes))

band_max, band_min, band_mean, band_stddev = blue.GetStatistics(0, 1)
print('Band range: {minimum} - {maximum}'.format(maximum=band_max,
                                                 minimum=band_min))
print('Band mean, stddev: {m}, {s}\n'.format(m=band_mean, s=band_stddev))

blue_data = blue.ReadAsArray()

import numpy
print(numpy.__version__)

import numpy as np
print(np.__version__)

image = np.zeros((dataset.RasterYSize, dataset.RasterXSize, dataset.RasterCount))

for b in range(dataset.RasterCount):
  band = dataset.GetRasterBand(b + 1)

  image[:, :, b] = band.ReadAsArray()

  print(image)
  print(image.dtype)